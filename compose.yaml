version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: PSRDep
    networks:
      - my_network
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my_network

  #  keycloak:
  #    image: quay.io/keycloak/keycloak:latest
  #    container_name: keycloak
  #    environment:
  #      DB_VENDOR: postgres
  #      DB_ADDR: postgres-container
  #      DB_DATABASE: keycloak
  #      DB_USER: postgres
  #      DB_PASSWORD: 123
  #      KEYCLOAK_USER: admin
  #      KEYCLOAK_PASSWORD: admin
  #    networks:
  #      - my_network
  #    ports:
  #      - "8080:8080"
  #    volumes:
  #      - keycloak_data:/opt/keycloak/data
  #    depends_on:
  #      - postgres
  #    command: start-dev

  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pigeonskyracedep
    networks:
      - my_network
    ports:
      - "8443:8443"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-container:5432/PSRDep
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123
    volumes:
      - keystore_volume:/app
    depends_on:
      - postgres
#      - keycloak

volumes:
  postgres_data:
  keystore_volume:
  keycloak_data:
  jenkins_home:

networks:
  my_network:
    driver: bridge
